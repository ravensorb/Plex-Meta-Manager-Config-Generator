version: 1.0.0
plex:
  serverUrl: ${PLEX_SERVER:-https://plex.ravenwolf.org:32400}
  token: ${PLEX_TOKEN}
#   library:
#   - { name: Library1, path: "lib1", pmm_path: "", pmm_delta: true/false }
#   - { name: Library2 }
# plexMetaManager:
#   cacheExistingFiles: false
thePosterDatabase:
  enablePro: False
  searchUrlPro: https://theposterdb.com/search/advanced/results
  searchUrl: https://theposterdb.com/search
  dbAssetUrl: https://theposterdb.com/api/assets/
theMovieDatabase:
  limitCollectionResults: 4
  apiKey: ""
  language: "en-us"
  region: "us"
# theTvDatabase:
#   apiKey:
templates:
  library:
  - { type: "library.any", format: "yaml", file: "library.yaml.j2" }
  - { type: "library.any", format: "html", file: "library.html.j2" }
  - { type: "library.any", format: "json", file: "library.json.j2", subFolder: "json" }

  collection:
  - { type: "collection.movie", format: "yaml", file: "movie.collection.yaml.j2", defaultTemplate: "tplTMDBCollection" }
  - { type: "collection.movie", format: "html", file: "movie.collection.html.j2" }
  - { type: "collection.movie", format: "json", file: "movie.collection.json.j2", subFolder: "json" }

  - { type: "collection.show", format: "yaml", file: "show.collection.yaml.j2", defaultTemplate: "tplTMDBCollection"  }
  - { type: "collection.show", format: "html", file: "show.collection.html.j2" }
  - { type: "collection.show", format: "json", file: "show.collection.json.j2", subFolder: "json" }

  - { type: "collection.artist", format: "yaml", file: "music.collection.yaml.j2" }
  - { type: "collection.artist", format: "html", file: "music.collection.html.j2" }
  - { type: "collection.atist", format: "json", file: "music.collection.json.j2", subFolder: "json" }

  - { type: "collection.report", format: "yaml", file: "report.collection.yaml.j2" }
  - { type: "collection.report", format: "html", file: "report.collection.html.j2" }
  - { type: "collection.report", format: "json", file: "report.collection.json.j2", subFolder: "json" }

  - { type: "collection.template", "format": "yaml", "file": "template.collection.yaml.j2" }

  metadata:
  - { type: "metadata.movie", format: "yaml", file: "movie.metadata.yaml.j2", defaultTemplate: "tplTMDBCollection"  }
  - { type: "metadata.movie", format: "html", file: "movie.metadata.html.j2" }
  - { type: "metadata.movie", format: "json", file: "movie.metadata.json.j2", subFolder: "json" }

  - { type: "metadata.show", format: "yaml", file: "show.metadata.yaml.j2", defaultTemplate: "tplTMDBCollection"  }
  - { type: "metadata.show", format: "html", file: "show.metadata.html.j2" }
  - { type: "metadata.show", format: "json", file: "show.metadata.json.j2", subFolder: "json" }

  - { type: "metadata.artist", format: "yaml", file: "music.metadata.yaml.j2" }
  - { type: "metadata.artist", format: "html", file: "music.metadata.html.j2" }
  - { type: "metadata.artist", format: "json", file: "music.metadata.json.j2", subFolder: "json" }

  - { type: "metadata.report", format: "yaml", file: "report.metadata.yaml.j2" }
  - { type: "metadata.report", format: "html", file: "report.metadata.html.j2" }
  - { type: "metadata.report", format: "json", file: "report.metadata.json.j2", subFolder: "json" }

  overlay:
  - { type: "overlay.movie", format: "yaml", file: "movie.overlay.yaml.j2" }
  - { type: "overlay.movie", format: "html", file: "movie.overlay.html.j2" }
  - { type: "overlay.movie", format: "json", file: "movie.overlay.json.j2", subFolder: "json" }

  - { type: "overlay.show", format: "yaml", file: "show.overlay.yaml.j2" }
  - { type: "overlay.show", format: "html", file: "show.overlay.html.j2" }
  - { type: "overlay.show", format: "json", file: "show.overlay.json.j2", subFolder: "json" }

  - { type: "overlay.artist", format: "yaml", file: "music.overlay.yaml.j2" }
  - { type: "overlay.artist", format: "html", file: "music.overlay.html.j2" }
  - { type: "overlay.artist", format: "json", file: "music.overlay.json.j2", subFolder: "json" }

  - { type: "overlay.report", format: "yaml", file: "report.overlay.yaml.j2" }
  - { type: "overlay.report", format: "html", file: "report.overlay.html.j2" }
  - { type: "overlay.report", format: "json", file: "report.overlay.json.j2", subFolder: "json" }

  # report:
  # - { type: "report.any", format: "yaml", file: "report.yaml.j2" }
  # - { type: "report.any", format: "json", file: "report.json.j2" }
  # - { type: "report.any", format: "html", file: "report.html.j2" }
output:
  path: "./data"
  
  pathFormat: "{{library.path}}"
  sharedTemplatePathFormat: "{{library.path}}/_templates"

  fileNameFormat:
    collections: "{{universe}} - {{collection.title}}"
    metadata: "{{universe}} - {{item.title}} ({{item.year}}) [{{item.editionTitle}}]"
    collectionsReport: "{{library.title}} - Collection Report"
    metadataReport: "{{library.title}} - Metadata Report"
    report: "{{library.title}} - Report"
    template: "template"
generate:
  types:
  - library.any
  - collection.movie
  - collection.artist
  - collection.show
  - collection.report
  - collection.template
  - metadata.movie
  - metadata.artist
  - metadata.show
  - metadata.report
  # - overlay.movie
  # - overlay.music
  # - overlay.show
  - report.any
  formats:
  - yaml
  - html
  # - json
  
